version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: product-postgres-dev
    environment:
      POSTGRES_DB: AiToooler
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - product-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  product-api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: product-api-dev
    environment:
      SPRING_PROFILES_ACTIVE: docker,dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/AiToooler
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JAVA_OPTS: -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005
    ports:
      - "8080:8080"
      - "5005:5005"  # Debug port
    volumes:
      - ./src:/app/src
      - ./target:/app/target
      - ~/.m2:/root/.m2
    networks:
      - product-network-dev
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: ["mvn", "spring-boot:run", "-Dspring-boot.run.jvmArguments=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005"]

networks:
  product-network-dev:
    driver: bridge

volumes:
  postgres_data_dev: